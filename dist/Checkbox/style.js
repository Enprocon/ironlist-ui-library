"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkbox=void 0;var _templateObject,_css=require("@emotion/css");function _taggedTemplateLiteral(a,b){return b||(b=a.slice(0)),Object.freeze(Object.defineProperties(a,{raw:{value:Object.freeze(b)}}))}var checkbox=(0,_css.css)(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  .container {\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 10px;\n    cursor: pointer;\n    user-select: none;\n\n    height: 24px;\n    display: flex;\n    align-items: center;\n  }\n\n  /* Hide the browser's default radio button */\n  .container input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n  }\n\n  /* Create a custom radio button */\n  .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 24px;\n    width: 24px;\n    border: 2px solid #002f34;\n    border-radius: 50%;\n  }\n\n  /* When the radio button is checked, add a blue background */\n  .container input:checked ~ .checkmark {\n    background-color: #002f34;\n  }\n\n  /* Create the indicator (the dot/circle - hidden when not checked) */\n  .checkmark:after {\n    content: '';\n    position: absolute;\n    display: none;\n  }\n\n  /* Show the indicator (dot/circle) when checked */\n  .container input:checked ~ .checkmark:after {\n    display: block;\n  }\n\n  /* Style the indicator (dot/circle) */\n  .container .checkmark:after {\n    top: 6px;\n    left: 6px;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: white;\n  }\n"])));exports.checkbox=checkbox;